apiVersion: apps/v1
kind: Deployment
metadata:
  name: socket-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: socket-server
  template:
    metadata:
      labels:
        app: socket-server
    spec:
      containers:
      - name: socket-server-container
        image: socket-server 
        imagePullPolicy: Never
        ports:
        - containerPort: 30001  # TCP
        - containerPort: 30002  # UDP
          protocol: UDP
        - containerPort: 30003  # WebSocket
        env:
        - name: ENV_VAR_EXAMPLE
          value: "example"
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: udp-services
  namespace: ingress-nginx
data:
  30002: "default/server-service:30002"  # Porta UDP mapeada para o servi√ßo
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
spec:
  selector:
    app: socket-server
  ports:
    - name: tcp-port-30001  # Porta TCP
      protocol: TCP
      port: 30001
      targetPort: 30001
      nodePort: 30001
    - name: udp-port-30002  # Porta UDP
      protocol: UDP
      port: 30002
      targetPort: 30002
      nodePort: 30002
    - name: websocket-port-30003  # Porta WebSocket
      protocol: TCP
      port: 30003
      targetPort: 30003
      nodePort: 30003
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: socket-server-ingress
  annotations:
    nginx.ingress.kubernetes.io/websocket-services: "server-service"
spec:
  rules:
  - http:
      paths:
      - path: /tcp  # Para TCP (porta 30001)
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 30001
      - path: /ws  # Para WebSocket (porta 30003)
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 30003
